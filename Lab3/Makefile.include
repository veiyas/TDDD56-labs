################################################################################
#                     ____  _        ____  _   _   ____                        #
#                    / ___|| | _____|  _ \| | | | |___ \                       #
#                    \___ \| |/ / _ \ |_) | | | |   __) |                      #
#                     ___) |   <  __/  __/| |_| |  / __/                       #
#                    |____/|_|\_\___|_|    \___/  |_____|                      #
#                                                                              #
#                        ~ SkePU 3 include Makefile ~                          #
################################################################################

# NOTE:
# This Makefile should be kept relatively platform-agnostic.
# Only sensible default values are defined here.
# Platform-specific include paths, user-local test programs etc.,
# should be specified in Makefile.in or on the command line.

# ---------------------------------------------------------------------------- #
# Default values which can be changed in Makefile.in

# Default backend set for SkePU precompiler.
BACKENDS = -openmp -opencl -cuda

# Backend-specific flags
#BACKEND_FLAGS = -DSKEPU_DEBUG=2

SKEPU_OPTIONS =
PRECOMPILER_OPTIONS =

OPTIMIZE_LVL = -O3







# Default OpenCL specific flags (matching a CUDA-provided installation)
OPENCL_FLAGS = -Wno-deprecated-declarations -lOpenCL -I /usr/local/cuda/include

include $(NESTED_LEVEL)Makefile.in

# Conditionally choose either g++ or nvcc for target compiler,
# depending on whether CUDA is in the list of backends
# This will also be used for non-preprocessed compilation of SkePU programs.
ifneq (,$(findstring cuda, $(BACKENDS)))
CXX = nvcc
endif

# Location of SkePU precompiler binary.
SKEPU = $(LLVM_BIN)/skepu-tool

# Flags for precompiler.
SKEPU_FLAGS = $(BACKENDS) $(PRECOMPILER_OPTIONS)
SKEPU_FLAGS += -- -std=c++11 -Wno-expansion-to-defined
SKEPU_FLAGS += -I $(CLANG_HEADERS)
SKEPU_FLAGS += -I $(SKEPU_SRC)/include
SKEPU_FLAGS += $(CLANGTOOL_USER_FLAGS)

#SKEPU_DEFINES = -DSKEPU_PRECOMPILED

# Activate backend flags for CUDA backend
ifneq (,$(findstring cuda, $(BACKENDS)))
BACKEND_FLAGS += -Xcudafe "--diag_suppress=declared_but_not_referenced --diag_suppress=set_but_not_used"
#SKEPU_DEFINES += -DSKEPU_CUDA
NVCCPASS = -Xcompiler
FILETYPE = cu
else
FILETYPE = cpp
endif

# Activate backend flags for OpenMP backend
ifneq (,$(findstring openmp, $(BACKENDS)))
BACKEND_FLAGS += $(NVCCPASS) -fopenmp
#SKEPU_DEFINES += -DSKEPU_OPENMP
endif

# Activate backend flags for OpenCL backend
ifneq (,$(findstring opencl, $(BACKENDS)))
BACKEND_FLAGS += $(OPENCL_FLAGS)
#SKEPU_DEFINES += -DSKEPU_OPENCL
endif

# Flags for target compiler (preprocessed sources).
TARGET_FLAGS = -g $(OPTIMIZE_LVL) -std=c++11 $(SKEPU_OPTIONS) -I $(SKEPU_SRC)/include -I ./  $(NVCCPASS) -Wno-attributes $(BACKEND_FLAGS) $(SKEPU_DEFINES)

# Flags for non-preprocessed compilation.
SEQ_FLAGS = -std=c++11 -O3 -I $(SKEPU_SRC)/include -Wno-attributes # -fno-rtti -fno-exceptions 

